$base-color: rgb(179, 224, 225);
$secondary-color: rgb(32, 68, 137);
$width: 90%;
$margin: 5%;

$breakpoints: (
  'phone': (max-width: 700px),
  'medium': (max-width: 1000px),
  'large': (min-width: 1001px),
);
// SOURCED FROM: http://sass-guidelin.es/#responsive-web-design-and-breakpoints

@mixin respond-to($breakpoint) {
  $raw-query: map-get($breakpoints, $breakpoint);

  @if $raw-query {
    $query: if(
      type-of($raw-query) == 'string',
      unquote($raw-query),
      inspect($raw-query)
    );

    @media #{$query} {
      @content;
    }
  } @else {
    @error 'No value found for `#{$breakpoint}`. '
         + 'Please make sure it is defined in `$breakpoints` map.';
  }
}

// SOURCED FROM: http://sass-guidelin.es/#responsive-web-design-and-breakpoints




.boxes {
  width: $width;
  list-style-type: none;
  margin-left: $margin;

}


.box {
  min-width: $width/3;
  padding-top: $width/12;
  padding-bottom: $width/12;
  margin-left: -2px;
  margin-right: -2px;
  display: inline-block;
  text-align: center;

  @include respond-to('medium') {
    min-width: $width/2;
    padding-top: $width/6;
    padding-bottom: $width/6;
  }

  @include respond-to('phone') {
    width: $width;
    padding-top: $width/3;
    padding-bottom: $width/3;
  }
}

.box.hover {
  color: lighten($base-color, 50%);
  background-color: $base-color;
}

h2 {
  padding-top: 5px;
  width: $width;
  margin-left: 5%;
  color: $secondary-color;
  border-top: solid 3px $secondary-color;
  -webkit-transition: border 0.3s ease;
}

.fa{
  width: 100%;
  color: $secondary-color;
}

p {
  visibility: hidden;
  padding: 0px;
  margin: 0px;
}


h2.hover {
  @extend .box.hover;
  border-top: none;
  border-bottom: solid 3px $secondary-color;
}

.fa.hover {
  @extend .box.hover;
  width: 100%;
}

p.hover {
  visibility: visible;
  @extend .box.hover;
  text-align: center;
  font-size: 1.5em;
}
